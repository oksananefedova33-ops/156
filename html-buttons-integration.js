// /ui/html-buttons/html-buttons-integration.js

(function() {
  'use strict';

  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ HtmlPreviewModal
  const waitForDependencies = () => {
    return new Promise((resolve) => {
      const check = () => {
        if (window.HtmlPreviewModal && window.HtmlButtonGenerator) {
          resolve();
        } else {
          setTimeout(check, 100);
        }
      };
      check();
    });
  };

  // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å HTML Preview Modal
  async function integrateWithHtmlPreview() {
    await waitForDependencies();

    // –ü–∞—Ç—á–∏–º –º–µ—Ç–æ–¥ createModal –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    const originalCreateModal = window.HtmlPreviewModal.prototype.createModal;

    window.HtmlPreviewModal.prototype.createModal = function() {
      // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
      originalCreateModal.call(this);

      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à–∏ –∫–Ω–æ–ø–∫–∏ –≤ toolbar
      const toolbar = this.modal.querySelector('.html-preview-editor-panel .html-preview-search-container');
      
      if (toolbar) {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–∞—à–∏—Ö –∫–Ω–æ–ø–æ–∫
        const buttonContainer = document.createElement('div');
        buttonContainer.style.cssText = 'display:flex; gap:8px; padding:8px 12px; border-bottom:1px solid #1f2b3b; background:#0a0f1a;';

        // –ö–Ω–æ–ø–∫–∞ "–í—Å—Ç–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É"
        const btnInsertLink = document.createElement('button');
        btnInsertLink.className = 'html-preview-btn';
        btnInsertLink.style.cssText = 'padding:6px 12px; font-size:13px; flex:1;';
        btnInsertLink.innerHTML = 'üîó –ö–Ω–æ–ø–∫–∞-—Å—Å—ã–ª–∫–∞';
        btnInsertLink.title = '–°–æ–∑–¥–∞—Ç—å HTML-–∫–æ–¥ –∫–Ω–æ–ø–∫–∏-—Å—Å—ã–ª–∫–∏';

        // –ö–Ω–æ–ø–∫–∞ "–í—Å—Ç–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É-—Ñ–∞–π–ª"
        const btnInsertFile = document.createElement('button');
        btnInsertFile.className = 'html-preview-btn';
        btnInsertFile.style.cssText = 'padding:6px 12px; font-size:13px; flex:1;';
        btnInsertFile.innerHTML = 'üìé –ö–Ω–æ–ø–∫–∞-—Ñ–∞–π–ª';
        btnInsertFile.title = '–°–æ–∑–¥–∞—Ç—å HTML-–∫–æ–¥ –∫–Ω–æ–ø–∫–∏-—Ñ–∞–π–ª–∞';

        buttonContainer.appendChild(btnInsertLink);
        buttonContainer.appendChild(btnInsertFile);

        // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ toolbar
        toolbar.parentNode.insertBefore(buttonContainer, toolbar.nextSibling);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const self = this;
        const generator = new window.HtmlButtonGenerator();

        btnInsertLink.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();

          generator.openLinkButtonModal((html) => {
            insertHtmlAtCursor(self.textarea, html);
            self.refreshPreview();
          });
        });

        btnInsertFile.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();

          generator.openFileButtonModal((html) => {
            insertHtmlAtCursor(self.textarea, html);
            self.refreshPreview();
          });
        });
      }
    };

    console.log('‚úÖ HTML Buttons integration loaded');
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ HTML –≤ –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞
  function insertHtmlAtCursor(textarea, html) {
    const start = textarea.selectionStart;
    const end = textarea.selectionEnd;
    const text = textarea.value;

    // –í—Å—Ç–∞–≤–ª—è–µ–º HTML —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    const before = text.substring(0, start);
    const after = text.substring(end);
    const insert = '\n' + html + '\n';

    textarea.value = before + insert + after;

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
    const newPosition = start + insert.length;
    textarea.setSelectionRange(newPosition, newPosition);
    textarea.focus();

    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ input –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    textarea.dispatchEvent(new Event('input', { bubbles: true }));
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', integrateWithHtmlPreview);
  } else {
    integrateWithHtmlPreview();
  }
})();